// []: min: 1, max: 1
// \: √©p n√≥ l√† k√Ω t·ª± b√¨nh th∆∞·ªùng
// {1,10}: min: 1, max: 10
// {1,}: min: 1, max: v√¥ c·ª±c
// {10}: min: 10, max: 10
// *: min: 0, max: v√¥ c·ª±c = {0,}
// +: min: 1, max: v√¥ c·ª±c = {1,}
// ?: min: 0, max: 1 = {0,1}
// ^: b·∫Øt ƒë·∫ßu chu·ªói
// $: k·∫øt th√∫c chu·ªói
// \w: [a-zA-Z0-9]
// \W: [^a-zA-Z0-9] (ng∆∞·ª£c l·∫°i vs \w)
// \d: [0-9]
// \D: [^0-9] (ng∆∞·ª£c l·∫°i vs \d)
// .: m·ªçi k√Ω t·ª±
// (ab|dc): ab ho·∫∑c dc

// VD: Nh·∫≠p s·ªë tu·ªïi (<200)
// Th√¥ng th∆∞·ªùng: /^[1-9]$|^[1-9][0-9]$|^1\d{2}$/mg
// T·ªëi ∆∞u: /^[1-9][0-9]?$|^1\d{2}$/gm; or /^(?:[1-9][0-9]?|1[0-9][0-9])$/mg

// VD: ƒêi·ªÉm (0-10, s·ªë th·∫≠p ph√¢n, sau d·∫•u ch·∫•m ho·∫∑c ph·∫©y c√≥ t·ªëi ƒëa 2 ch·ªØ s·ªë)
// test
// --------H·ª£p l·ªá---------------
// 0;
// 10;
// 0.5;
// 5.9;
// 0.25;
// 5.75;
// 3.03;
// 5,5
// 5,67

// --------Kh√¥ng h·ª£p l·ªá---------
// 5.0;
// 3.333;
// 11;
// 10.5;
// 3.3;

// ----------Gi·∫£i ph√°p-------------
// Th√¥ng th∆∞·ªùng: /^(?:10|[0-9]|[0-9]\[.,][1-9]|[0-9]\.[0-9][1-9])$/mg
// T·ªëi ∆∞u: /^(?:10|[0-9](?:\[.,][1-9])?|[0-9]\.[0-9][1-9])$/mg
// T·ªëi ∆∞u: /^(?:10|[0-9](?:\[.,][0-9]?[1-9])?)$/mg

// Nh·∫≠p t√™n kh√°ch h√†ng
// --------H·ª£p l·ªá---------------
// Le Minh Hung
// Nguyen Binh
// Nguyen B
// Nguyen Binh Minh Hung

// --------Kh√¥ng h·ª£p l·ªá---------
// le
// le  minh hung
// le Minh hung
// Nguyen Binh
// Nguyen Binh Minh hung

// ----------Gi·∫£i ph√°p-------------
// Th√¥ng th∆∞·ªùng: /^[A-Z][a-z]+(?: [A-Z][a-z]*)+$/gm

// --------------------------------------------------------

//Introduce
// ----------------------------------------------------------------------------------------
// let message = 'Hi, are you there? hi, HI...';
// const regex = /hit/ig

// Check trong chu·ªïi c√≥ kh·ªõp v·ªõi pattern
// const check = regex.test(message)

// Search v√† tr·∫£ v·ªÅ m·ªôt m·∫£ng gi√° tr·ªã n·∫øu kh·ªõp pattern, n·∫øu kh√¥ng c√≥ tr·∫£ v·ªÅ null
// const check = message.match(regex)

// Thay th·∫ø chu·ªói (th√™m -i, -g th√¨ s·∫Ω kh√¥ng ph√¢n bi·ªát ch·ªØ hoa-th∆∞·ªùng, v√† t√¨m ki·∫øm to√†n c·ª•c)
// const repl = message.replace(/hi/ig, 'hung')

// console.log(repl)
// -----------------------------------------end--------------------------------------------------

// Regular Expression: Character Classes
// -------------------------------------------------------------------------------------------
// 1. \d which matches any single digit
// let phone = '+1-(408)-555-0105';
// const regex = /\d/g
// const arrayNumber = phone.match(regex) //=> array of numbers
// const phoneNumber = arrayNumber.join('')
// console.log(phoneNumber)
// -----------------------------------------end-----------------------------------------------

// Regular Expression: Anchors
// -------------------------------------------------------------------------------------------
// ^ ‚Äì The caret anchor matches the beginning of the text.
// $ ‚Äì The dollar anchor matches the end of the text.
// let string = 'Javascript'
// console.log(/^J/.test(string)) //true
// console.log(/^K/.test(string)) //false
// console.log(/t$/.test(string)) //false
// ------------------------------------------end----------------------------------------------

// Regular Expression: Quantifiers
// -------------------------------------------------------------------------------------------

// let str = 'ECMAScript 2020';
// let re = /\d{4}/;

// let result = str.match(re);
// console.log(result);

// global
// let numbers = '+1-(408)-555-0105'.match(/\d{1,}/g);
// console.log(numbers);
// -----------------------------------------end-----------------------------------------------

// Regular Expression: Sets and Ranges
// ------------------------------------------------------------------------------------------
// sets [..]
// let str = 'How cats, rats, and bats became Halloween animals';
// let re = /[cbr]ats/g;
// let results = str.match(re);
// console.log(results);

// Ranges [..-..]
let result = "It is üçé".match(/[üçéüçÖüçì]/u);

console.log(result);

// -----------------------------------------end-----------------------------------------------
